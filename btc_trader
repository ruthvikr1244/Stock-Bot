import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

driver = webdriver.Chrome(ChromeDriverManager().install())
driver.get("https://www.dailyfx.com/bitcoin")

wallet = float(input("How much would you like to invest: "))
ogAmount = wallet
workingWallet = wallet
initAmount = wallet
buyingPrice = 0.00

time.sleep(5)

btc = driver.find_element_by_xpath('//*[@id="dfx-instrumentPageBar-BITCOIN"]/div[1]/div/div[1]/div[2]/div[1]')
startPrice = float(btc.get_attribute('data-value'))
btcPurchased = wallet/startPrice
startUserPrice = btcPurchased*startPrice
ogPrice = startUserPrice
print(startUserPrice)


while True:

    currentPrice = float(btc.get_attribute('data-value'))
    currentUserPrice = btcPurchased*currentPrice

    if currentUserPrice != startUserPrice:

        print("Current Rate: ", currentPrice)
        print("Current Price: ", currentUserPrice)
        print("Price Change: ", currentUserPrice-startUserPrice)
        print("OG Price: ", ogPrice)

        if currentUserPrice > ogPrice:
            if currentUserPrice > startUserPrice:
                income = btcPurchased*currentPrice #Checking current withdraw amount
                wallet += (income-ogAmount) #Adding profit to wallet
                btcPurchased = ogAmount / currentPrice #Buying btc at current price with initial amount
                startUserPrice = btcPurchased * currentPrice
                print("Wallet: ", wallet)
                print("Money in play: ", ogAmount)
                if income > initAmount:
                    ogAmount = initAmount
                continue

        elif currentUserPrice < ogPrice:

            if currentUserPrice < startUserPrice:

                now = time.time()
                future = now + 10

                while True:

                    currentPrice = float(btc.get_attribute('data-value'))
                    currentUserPrice = btcPurchased * currentPrice

                    if currentUserPrice > startUserPrice:
                        if currentUserPrice > ogPrice:
                            break

                    if time.time() > future:
                        print("Entered OG Lowering")
                        income = btcPurchased * currentPrice
                        wallet += (income-startUserPrice)
                        print("Wallet: ", wallet)
                        btcPurchased = ogAmount / startPrice
                        startUserPrice = btcPurchased * currentPrice
                        ogPrice = currentUserPrice
                        if income < ogAmount:
                            ogAmount = income
                        print("Money in play: ", ogAmount)
                        break

                    startUserPrice = currentUserPrice
                else:
                    continue




        startUserPrice = currentUserPrice
